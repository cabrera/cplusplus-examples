import os

CXXFLAGS = ['-Wall','-Wextra','-ansi','-pedantic','-std=c++0x']

def options(opt):
	opt.load('compiler_cxx')

def configure(ctx):
        print(ctx.path.abspath())
	ctx.load('compiler_cxx')
	
def build(bld):
	path = bld.path.abspath()
	for source in [x for x in os.listdir(path) if x.endswith('.cpp')]:
		bld.program(
			source = source,
			target = source.split('.')[0],
			cxxflags = CXXFLAGS
		)
